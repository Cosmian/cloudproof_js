---
name: CI
on: push

jobs:
  build:
    uses: ./.github/workflows/js.yml
    with:
      subcommands: |
        python3 scripts/download_wasm.py
        npm install

  build_in_docker:
    uses: ./.github/workflows/js_in_docker.yml
    with:
      subcommands: |
        python3 scripts/download_wasm.py
        npm install
      kms-version: 4.0.1

  lint:
    needs: build
    uses: ./.github/workflows/js.yml
    with:
      subcommands: |
        npm run prettier:check
        npm run lint

  test:
    needs: build_in_docker
    uses: ./.github/workflows/js_in_docker.yml
    with:
      subcommands: |
        npm test
      kms-version: 4.0.1
      regression_files: |
        ./node_modules/non_regression_vector.json
        ./node_modules/sqlite.db

  example_vuejs:
    needs: build_in_docker
    uses: ./.github/workflows/js_in_docker.yml
    with:
      subcommands: |
        cd examples/vuejs
        npm install
        npm run build
        npm run serve -- --port 8090 &
        sleep 5
        cd ../test
        node chrome.mjs http://localhost:8090 http://kms:9998
      kms-version: 4.0.1

  example_reactjs:
    needs: build_in_docker
    uses: ./.github/workflows/js_in_docker.yml
    with:
      subcommands: |
        cd examples/reactjs
        npm install
        npm run build
        npm run serve -- --port 8090 &
        sleep 5
        cd ../test
        node chrome.mjs http://localhost:8090 http://kms:9998
      kms-version: 4.0.1

  example_webpack:
    needs: build
    uses: ./.github/workflows/js.yml
    with:
      subcommands: |
        cd examples/webpack
        npm install
        npx webpack

  example_nodejs:
    needs: build_in_docker
    uses: ./.github/workflows/js_in_docker.yml
    with:
      subcommands: |
        cd examples/nodejs
        npm install
        node test.mjs 10
      kms-version: 4.0.1

  example_imdb:
    needs: build
    uses: ./.github/workflows/js.yml
    with:
      subcommands: |
        cd examples/nodejs_search_imdb
        curl https://datasets.imdbws.com/title.basics.tsv.gz --output imdb.tsv.gz
        gzip -d imdb.tsv.gz
        npm install
        node test.mjs

  example_full_text_search:
    needs: build
    uses: ./.github/workflows/js.yml
    with:
      subcommands: |
        cd examples/full_text_search
        npm install
        node test.mjs

  publish-dry-run:
    needs:
      - lint
      - example_imdb
      - example_full_text_search
      - example_nodejs
      - example_webpack
      - example_reactjs
      - example_vuejs
    uses: ./.github/workflows/js.yml
    with:
      subcommands: |
        echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ~/.npmrc
        npm publish --dry-run
    secrets: inherit

  publish:
    needs:
      - publish-dry-run
    uses: ./.github/workflows/js.yml
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    with:
      subcommands: |
        echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ~/.npmrc
        npm publish
    secrets: inherit

  release:
    needs:
      - publish-dry-run
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Release
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1

  cleanup:
    needs:
      - publish
      - release
    uses: Cosmian/reusable_workflows/.github/workflows/cleanup_cache.yml@main
    secrets: inherit
