image: node:18

variables:
  SCCACHE_DIR: ${CI_PROJECT_DIR}/.cache/sccache
  # KMS
  COSMIAN_SERVER_URL: http://localhost:9998
  KMS_PUBLIC_PATH: /tmp
  KMS_PRIVATE_PATH: /tmp
  KMS_SHARED_PATH: /tmp

stages:
  - test
  - pack
  - publish

.services:
  services:
    - name: gitlab.cosmian.com:5000/core/kms:develop_ci
      alias: kms_ci
    - redis:latest
  before_script:
    - node --version
    - npm --version
    - npm install

eslint:
  extends: .services
  stage: test
  script:
    - npm run format
  allow_failure: true

build:
  stage: test
  extends: .services
  script:
    - npm test

example_vuejs:
  stage: test
  script:
    - apt update && apt install -y gconf-service libgbm-dev libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
    - npm install
    - cd examples/vuejs
    - npm install
    - npm run build
    - npm run serve&
    - node ../test/chrome.mjs

example_reactjs:
  stage: test
  script:
    - apt update && apt install -y gconf-service libgbm-dev libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
    - npm install
    - cd examples/reactjs
    - npm install
    - npm run build
    - npm run serve&
    - node ../test/chrome.mjs

pack:
  stage: pack
  before_script:
    - apt-get update
    - apt-get install -y git
  script:
    - git archive --verbose --format=zip --output=${CI_PROJECT_NAME}_${CI_COMMIT_TAG}.zip HEAD
  artifacts:
    name: '${CI_PROJECT_NAME}_${CI_COMMIT_TAG}'
    paths:
      - ${CI_PROJECT_NAME}_${CI_COMMIT_TAG}.zip
    expire_in: 3 mos
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/'

publish:
  stage: publish
  before_script:
    - npm install -g typescript
  script:
    - npm install
    - echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ~/.npmrc
    - npm publish
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/'
