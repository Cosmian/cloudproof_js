image: node:16

variables:
  SCCACHE_DIR: ${CI_PROJECT_DIR}/.cache/sccache
  NODE_OPTIONS: --max-http-header-size=128000
  # Postgres
  POSTGRES_DB: app_db
  POSTGRES_USER: app_user
  POSTGRES_PASSWORD: password
  # Postgrest
  PGRST_SERVER_HOST: localhost
  PGRST_SERVER_PORT: 3000
  PGRST_DB_URI: postgres://app_user:password@localhost:5432/app_db
  PGRST_DB_SCHEMA: public
  PGRST_DB_ANON_ROLE: app_user
  PGRST_OPENAPI_SERVER_PROXY_URI: http://localhost:3000

stages:
  - prebuild
  - build
  - publish
  - deploy

tslint:
  stage: prebuild
  script:
    - npm install -g tslint
    - tslint -c tslint.json 'src/**'
  allow_failure: true

.services:
  stage: build
  services:
    - name: postgres
      alias: db
    - name: postgrest/postgrest
      alias: server
  before_script:
    - apt update && apt install -y postgresql libpq-dev
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h localhost -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f ./dump_db_demo.sql
  script:
    - npm install
    - npm test

build_node_12:
  extends: .services
  image: node:12

build_node_14:
  extends: .services
  image: node:14

build_node_16:
  extends: .services
  image: node:16

build_node_18:
  extends: .services
  image: node:18

publish:
  stage: publish
  before_script:
    - npm install -g typescript
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ~/.npmrc
    - npm publish
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/'

deploy:
  image: docker:19.03.15
  stage: deploy
  script:
    - ssh cosmian@demo-cloudproof.cosmian.com 'mv ~/demo_cloudproof/frontend.tar ~/demo_cloudproof/frontend.tar.old'
    - docker build -f Dockerfile -t frontend .
    - docker save frontend > frontend.tar
    - scp docker-compose.yml frontend.tar run-demo.sh dump_db_demo.* cosmian@demo-cloudproof.cosmian.com:~/demo_cloudproof/
    - ssh cosmian@demo-cloudproof.cosmian.com 'bash ~/demo_cloudproof/run-demo.sh'
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/'
